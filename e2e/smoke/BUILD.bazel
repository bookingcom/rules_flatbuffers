"""Provides a simple way to test your rules as an external workspace.
Add a basic smoke-test target below.
"""

load("@bazel_skylib//rules:build_test.bzl", "build_test")
load("@com_bookingcom_rules_flatbuffers//flatbuffers:defs.bzl", "flatbuffer_library_public")

# Replace with a usage of your rule/macro
filegroup(name = "empty")

build_test(
    name = "smoke_test",
    targets = [
        # targets you add above
        ":empty",
    ],
)

flatbuffer_library_public(
    name = "monster_fbs_java",
    srcs = ["monster.fbs"],
    outs = [
        # Bazel expects that we have the full list of generated files, the rule
        # will output to stderr the generated list of files to stderr. If you
        # build with --test_output_filter=DO_NOT_MATCH_ANYTHING then you will
        # get the list of files when it fails
        "MyGame/Sample/Color.java",
        "MyGame/Sample/Equipment.java",
        "MyGame/Sample/EquipmentUnion.java",
        "MyGame/Sample/Monster.java",
        "MyGame/Sample/MonsterT.java",
        "MyGame/Sample/Vec3.java",
        "MyGame/Sample/Vec3T.java",
        "MyGame/Sample/Weapon.java",
        "MyGame/Sample/WeaponT.java",
    ],
    language_flag = "--java",
    # If you're going to build in Windows hosts then you need to have this
    # defined, otherwise the output directory includes a bunch of non
    # expected files
    out_prefix = "flatbuffer-output",
)

java_library(
    name = "monster_java",
    srcs = [":monster_fbs_java"],
    deps = [
        "@flatbuffers-java//jar",
    ],
)
